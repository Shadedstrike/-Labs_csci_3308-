Name: April Ott

###Answer Scripts


##SECTION 3

#3.1 :Write an SQL Script to create a new table to hold information on the competing universities.
The table should hold the following information:

  University Name (Text) (Note: University Name should be unique and set as PRIMARY KEY)
  Date Established (Date)
  Address (Address)
  Student Population (Int)
  Acceptance Rate (Decimal)

>>
CREATE Table university_info(
  university_name VARCHAR(100) PRIMARY KEY, #name
  date_established INT NOT NULL,

  address VARCHAR(100),
  student_pop INT NOT NULL,   #int
  acceptance_rate VARCHAR(30)
);



#3.2 Write an insert statement to add the University Information The table should hold the following information:

       University Name :- CU Boulder
       Date Established :- 1876
       Address :- 1100 28th St, Boulder, CO 80303
       Student Population :- 35,000
       Acceptance Rate :- 80%

 #set up the params, define the values and insert into the table.

>>INSERT INTO university_info(university_name, date_established, address, student_pop, acceptance_rate);
  VALUES('CU Boulder', 1876, '1100 28th St, Boulder, CO 80303', 35000, '80%');


##SECTION 4

#4.1 Write a script to list the Football Players (name & major), organized by major in college.

>> SELECT name , major FROM football_players ORDER BY major;

#4.2 Write a script to list all of the Football Players (name & rushing yards) who have 70 or more rushing yards.
#same as above, pull name, rushing from the table, then check if it's valid

>> SELECT name , rushing_yards FROM football_players Where rushing_yards >= 70;;


#4.3 Write a script to list all of the games played against Nebraska (show all game information).
# * operator = all

>>SELECT * FROM football_games WHERE visitor_name = 'Nebraska';


#4.4 Write a script to list all of the games CU Boulder has won.

>>SELECT * FROM football_games WHERE home_score > visitor_score;

#4.5 Write a script to list all of the games played in the Fall 2020 Season (show team name & game date).
#  (show team name & game date).

>> SELECT visitor_name, game_date FROM football_games;

#4.6 Write a script to list the average number of points CU has scored in past games.

>> SELECT AVG(home_score) FROM football_games

#4.7 Write a script to list the majors of the Football players and calculate how many of them are in each of the majors listed.
# Rename the column where you calculate the majors to number_of_players.

>> SELECT major, count(1) AS number_of_players FROM football_players GROUP BY major;

#4.8 Write a script to modify the above query in 5.6 to include only the Football players
#who are majoring in Computer Science.
#count up by 1 for each player in csci from football players, match major

>> SELECT major, count(1) AS number_of_players FROM football_players WHERE major = 'CSCI' GROUP BY major;


##SECTION 5

#5.1 Write a script to create a view that counts the total number of winning games.

>> SELECT SUM(1) AS winning_games FROM football_games WHERE home_score > visitor_score;

#5.2 Write a script to create a view that counts the total number of games played.

>> SELECT SUM(1) AS games FROM football_games;

#5.3 Write a script that uses the two views you created (from 6.1 and 6.2) to calculate the percent of wins.
#Mult by 100 at the end to get percentage

>> SELECT(SELECT CAST(SUM(1) AS float) FROM football_games WHERE home_score>visitor_score ) / (SELECT(CAST(SUM(1) AS float)FROM football_games)*100;


##SECTION 6

#6.1 Write a script that will count how many games "Cedric Vega" has played in during his entire football career.

>> SELECT count(1) FROM football_games JOIN football_players ON 1 = ANY(players) AND football_players.name = 'Cedric Vega';

#6.2 Write a script that will calculate the average number of rushing yards for "Cedric Vega", based on the number of games he has played.

>> SELECT(rushing_yards AS FLOAT) FROM football_games JOIN football_players ON rushing_yards = ANY(rushing_yards) AND football_players.name = 'Cedric Vega';
